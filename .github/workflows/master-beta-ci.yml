name: CI/CD Build Image [Master/Beta]

on:
    push:
        tags:
            - "v*.*.*"
            - "v*.*.*-beta.*"

permissions:
    packages: write
    contents: write

env:
    GHCR_REGISTRY: ghcr.io
    DH_REGISTRY: docker.io
    IMAGE_NAME: wizarrrr/wizarr

jobs:
    before_build:
        name: Prepare for Build
        runs-on: ubuntu-latest
        steps:
            # Clear the digests from the artifacts
            - name: Clear digests
              uses: geekyeggo/delete-artifact@v2
              with:
                  name: |
                      digests_dh
                      digests_ghcr

    build:
        name: Build and Push containers
        runs-on: ubuntu-latest
        needs:
            - before_build
        strategy:
            fail-fast: false
            matrix:
                platform:
                    - linux/amd64
                    - linux/arm64

        steps:
            # Checkout the repo
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  persist-credentials: false

            # Use NPM and Node.js to install dependencies
            - name: Use Node.js 18.18.2
              uses: actions/setup-node@v4
              with:
                  node-version: 18.18.2

            # Set up Python and install Poetry
            - uses: actions/setup-python@v5
              with:
                  python-version: "3.10"

            # Install Poetry
            - name: Install Poetry
              run: |
                  pip install poetry==1.6.1
                  poetry config virtualenvs.create false

            # Install dependencies
            - name: Install dependencies
              run: npm install

            # Build the Repository
            - name: Build the Repository
              run: |
                  npx nx build wizarr-backend
                  npx nx build wizarr-frontend

            # Set up Docker Buildx
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            # Login to GHCR
            - name: Login to GHCR
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            # Login to Docker Hub
            - name: Login to Docker Hub
              uses: docker/login-action@v3
              if: ${{ github.repository_owner == 'wizarrrr' }}
              with:
                  registry: ${{ env.DH_REGISTRY }}
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            # Check if the tag is a beta tag
            - name: Get Release Branch
              id: release-branch
              run: |
                  if [[ ${{ github.ref }} == 'refs/tags/v'*.*.*-beta.* ]]; then
                      echo "::set-output name=release_branch::beta"
                  elif [[ ${{ github.ref }} == 'refs/tags/v'*.*.* ]]; then
                      echo "::set-output name=release_branch::latest"
                  else
                      echo "Unknown tag, not setting environment variable."
                      exit 1
                  fi
                  
            # Get the tag name
            - name: Get tag name
              id: tag
              uses: dawidd6/action-get-tag@v1
              with:
                  strip_v: true

            - name: Extract metadata (tags, labels) for Docker
              id: metadata
              uses: docker/metadata-action@v5
              with:
                tags: |
                  type=raw,value=${{ steps.tag.outputs.tag }}
                  type=raw,value=${{ steps.release-branch.outputs.release_branch }}
                images: |
                  name=${{ env.DH_REGISTRY }}/${{ github.repository }},enable=${{ github.repository_owner == 'wizarrrr' }}
                  name=${{ env.GHCR_REGISTRY }}/${{ github.repository }}
                  
            - name: Build and push by digest
              uses: docker/build-push-action@v6
              with:
                context: .
                file: ./dockerfiles/wizarr-ci/Dockerfile
                provenance: false
                platforms: ${{ matrix.platform }}
                tags: ${{ steps.metadata.outputs.tags }}
                labels: ${{ steps.metadata.outputs.labels }}
                outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
